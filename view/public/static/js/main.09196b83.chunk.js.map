{"version":3,"sources":["config.js","history.js","apis/pagame.js","actions/index.js","actions/types.js","components/expenses/ExpenseAddForm.js","components/expenses/ExpenseRequestForm.js","components/expenses/ExpenseCreate.js","components/expenses/ExpenseList.js","components/login/GoogleAuth.js","components/login/LoginForm.js","components/login/Login.js","components/login/SignupForm.js","components/login/Signup.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/expenseReducers.js","index.js"],"names":["module","exports","GOOGLE_CLIENTID","MONGODB_URL","createBrowserHistory","axios","create","baseURL","headers","Content-Type","signIn","authInstance","profile","currentUser","get","getBasicProfile","type","payload","userId","getId","fullName","getName","email","getEmail","instance","authUser","formValues","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","usrProfile","wrap","_context","prev","next","pagame","post","objectSpread","sent","data","history","push","swal","stop","_x","apply","this","arguments","signOut","ExpenseAddForm","renderInput","formProps","className","concat","meta","error","touched","react_default","createElement","label","input","_this","renderError","onExpenseSubmit","props","onSubmit","onExpenseRequest","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","description","amount","requestee","ExpenseRequestForm","state","assign","_ref2","ExpenseCreate","componentDidMount","isSignedIn","createExpense","location","pathname","expenses_ExpenseAddForm","expenses_ExpenseRequestForm","connect","auth","_callee2","getState","date","requestor","_context2","replace","Date","_x2","_x3","ExpenseList","expenses","length","fetchExpenses","handleExpenseDelete","expenseId","title","text","icon","buttons","dangerMode","then","willDelete","deleteExpense","_this2","map","expense","d","getMonth","getDate","getFullYear","key","_id","onClick","style","float","textAlign","marginBottom","react_router_dom","to","renderList","renderCreateBtn","values","userEmail","_ref3","_callee3","_context3","_x4","id","console","log","_ref4","_callee4","_context4","delete","t0","_x5","config","require","GoogleAuth","onAuthChange","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","renderAuthButton","LoginForm","placeholder","iconClass","onLoginSubmit","login_GoogleAuth","password","Login","marginTop","login_LoginForm","SignupForm","re_password","Signup","login_SignupForm","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","renderCollapseMenu","renderLoggedNav","renderHeader","App","react_router","components_Header","path","exact","INITIAL_STATE","combineReducers","undefined","action","formReducer","defineProperty","_","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.09196b83.chunk.js","sourcesContent":["const config = {\r\n    GOOGLE_CLIENTID: '461114790135-uqibl32l9f2fps35en1asdl45qkmafo2.apps.googleusercontent.com',\r\n    MONGODB_URL: 'http://localhost:3030'\r\n}\r\nmodule.exports = config;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import axios from 'axios'\r\n//3001 port for json-server \r\n//3000 port for NodeJS server with MongoDB atlas\r\nexport default axios.create({\r\n    baseURL: 'https://app-pagame.herokuapp.com',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})","import pagame from '../apis/pagame'\r\nimport history from '../history'\r\nimport swal from 'sweetalert'\r\n\r\nimport {\r\n    SIGN_IN, SIGN_OUT, CREATE_EXPENSE, FETCH_EXPENSES,\r\n    FETCH_EXPENSE, DELETE_EXPENSE\r\n} from \"./types\";\r\n\r\n\r\nexport const signIn = (authInstance) => {\r\n    //needs to handle case where profile doesn't load and authInstance is null\r\n    const profile = authInstance.currentUser.get().getBasicProfile()\r\n    const usrProfile = {\r\n        userId: profile.getId(),\r\n        fullName: profile.getName(),\r\n        email: profile.getEmail()\r\n    }\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: usrProfile,\r\n        instance: authInstance\r\n    };\r\n};\r\n\r\n// Authentivate User in Backend\r\nexport const authUser = (formValues) => {\r\n    return async (dispatch) => {\r\n        const response = await pagame.post('/users/find', { ...formValues })\r\n        const profile = response.data\r\n        if (response.data.fullName) {\r\n            const usrProfile = {\r\n                fullName: profile.fullName,\r\n                email: profile.email\r\n            }\r\n            dispatch({\r\n                type: SIGN_IN,\r\n                payload: usrProfile,\r\n                instance: null\r\n            });\r\n            history.push('/');\r\n        }\r\n        else {\r\n            //swal to handle error\r\n            swal(\"Not found\", response.data, \"warning\");\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    history.push('/login');\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n\r\n//this is using redux thunk therefore we will pass the dispatch function\r\nexport const createExpense = (formValues) => {\r\n    //we need to set a handle on the response that we get form the post, we will be getting the record that was created\r\n    return async (dispatch, getState) => {\r\n        //tweek to remove posible $ entires\r\n        formValues.amount = formValues.amount.replace(\"$\", \"\");\r\n        //format the date to be added to the expense record\r\n        var date = new Date()\r\n        const userId = getState().auth.usrProfile.userId;\r\n        const requestor = getState().auth.usrProfile.email;\r\n\r\n        const response = await pagame.post('/expenses/create', { ...formValues, requestor, userId, date }); //here we are taking all the objects inside formValues and adding the userId\r\n        dispatch({\r\n            type: CREATE_EXPENSE,\r\n            payload: response.data\r\n        });\r\n        history.push('/');\r\n\r\n    };\r\n}\r\n\r\nexport const fetchExpenses = (userEmail) => {\r\n    return async (dispatch) => {\r\n        const response = await pagame.get(`/expenses/${userEmail}/all`);\r\n        dispatch(\r\n            {\r\n                type: FETCH_EXPENSES,\r\n                payload: response.data\r\n            });\r\n    };\r\n}\r\n\r\nexport const deleteExpense = (id) => {\r\n    console.log(id)\r\n    return async (dispatch) => {\r\n        try{\r\n            const response = await pagame.delete(`/expenses/${id}/delete`);\r\n            dispatch(\r\n                {\r\n                    type: DELETE_EXPENSE,\r\n                    payload: response.data._id //passing the ID of the deleted record in the response to omit in our reducer\r\n                });\r\n            swal(\"Successfully Deleted!\", {\r\n                icon: \"success\",\r\n            });\r\n        }catch(error){\r\n            swal(\"Error while trying to delete\", {\r\n                icon: \"error\",\r\n            });\r\n        }        \r\n    };\r\n};\r\n\r\nexport const fetchExpense = (id) => {\r\n    return async (dispatch) => {\r\n        const response = await pagame.get(`/expenses/${id}`);\r\n        dispatch(\r\n            {\r\n                type: FETCH_EXPENSE,\r\n                payload: response.data\r\n            });\r\n    };\r\n};\r\n\r\n\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_EXPENSE = 'CREATE_EXPENSE';\r\nexport const FETCH_EXPENSES = 'FETCH_EXPENSES';\r\nexport const FETCH_EXPENSE = 'FETCH_EXPENSE';\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nclass ExpenseAddForm extends React.Component {\r\n\r\n   \r\n    renderError({ error, touched }) {//distructured parameters from meta\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    //everytime the Field tag calls the renderInput function it's going to pass a number of arguments as props\r\n    renderInput = (formProps) => {\r\n        const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{formProps.label}</label>\r\n                <input {...formProps.input} />\r\n                {/* meta property from redux form has the error messages for each field */}\r\n                {this.renderError(formProps.meta)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onExpenseSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    }\r\n    onExpenseRequest = () =>{\r\n\r\n    }\r\n\r\n    render() {\r\n        return (//onSubmit with redux forms handler -- also un semamntic UI if we don't specify the error class inside the form className the errors are going to be hidden by default\r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit(this.onExpenseSubmit)} className=\"ui form error\">\r\n                    <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\r\n                    <Field name=\"amount\" component={this.renderInput} label=\"Enter Amount\" /> \r\n                    <button className=\"ui button primary\">Add to my history</button>\r\n                </form>                \r\n            </div>\r\n            \r\n        );\r\n    };\r\n};\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n    //redux form looks at the name property if an errors property as the same name as the field then Redux form is going to take that error message and pass it into the renderInput function\r\n    //basically the callback function that that specific field is calling and passing the fromProps\r\n    if (!formValues.description) {\r\n        errors.description = \"You must enter a description\";\r\n    }\r\n    if (!formValues.amount) {\r\n        errors.amount = \"You must enter an amount\";\r\n    }\r\n    if (!formValues.requestee) {\r\n        errors.requestee = \"You must enter an amount\";\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({ //reduxForm is very similar to connect except it takes only one argument {}\r\n    form: 'expense form',\r\n    validate: validate    \r\n})(ExpenseAddForm);\r\n","import React from 'react';\r\nimport pagame from '../../apis/pagame'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport swal from 'sweetalert'\r\n\r\nclass ExpenseRequestForm extends React.Component {\r\n\r\n    state = { errors: {} }\r\n\r\n    renderError({ error, touched }) {//distructured parameters from meta\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    //everytime the Field tag calls the renderInput function it's going to pass a number of arguments as props\r\n    renderInput = (formProps) => {\r\n        const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{formProps.label}</label>\r\n                <input {...formProps.input} type={formProps.type}/>\r\n                {/* meta property from redux form has the error messages for each field */}\r\n                {this.renderError(formProps.meta)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    //Need to verify that requestee email address is valid\r\n    onExpenseSubmit = async (formValues) => {\r\n        const response = await pagame.get(`/users/${formValues.requestee}`);\r\n        if(response.data.email){\r\n            this.props.onSubmit(formValues);\r\n        }\r\n        else{\r\n            swal(\"Email not found\", response.data, \"warning\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (//onSubmit with redux forms handler -- also un semamntic UI if we don't specify the error class inside the form className the errors are going to be hidden by default\r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit(this.onExpenseSubmit)} className=\"ui form error\">\r\n                    <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\r\n                    <Field name=\"amount\" component={this.renderInput} label=\"Enter Amount\" />                    \r\n                    <Field name=\"requestee\" type=\"email\" component={this.renderInput} label=\"Enter Requestee email\" />\r\n                    <button className=\"ui positive button\">Submit Request</button>                    \r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n    //redux form looks at the name property if an errors property as the same name as the field then Redux form is going to take that error message and pass it into the renderInput function\r\n    //basically the callback function that that specific field is calling and passing the fromProps\r\n    if (!formValues.description) {\r\n        errors.description = \"You must enter a description\";\r\n    }\r\n    if (!formValues.amount) {\r\n        errors.amount = \"You must enter an amount\";\r\n    }\r\n    if (!formValues.requestee) {\r\n        errors.requestee = \"You must enter the requestee email address\";\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({ //reduxForm is very similar to connect except it takes only one argument {}\r\n    form: 'expense form',\r\n    validate: validate\r\n})(ExpenseRequestForm);\r\n","import React from 'react';\r\nimport history from '../../history'\r\nimport { connect } from 'react-redux';\r\nimport { createExpense } from '../../actions';\r\nimport ExpenseAddForm from './ExpenseAddForm';\r\nimport ExpenseRequestForm from './ExpenseRequestForm';\r\n\r\n\r\nclass ExpenseCreate extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.isSignedIn !== true) {           \r\n            history.push('/login');\r\n        }\r\n    }\r\n  \r\n    onSubmit = (formValues) => {\r\n        if(formValues.requestee){\r\n            this.props.createExpense(formValues);\r\n        } \r\n         else{\r\n            formValues.requestee = this.props.usrProfile.email; \r\n            this.props.createExpense(formValues);\r\n         }\r\n    }\r\n\r\n    render() {\r\n        return (this.props.location.pathname === \"/expenses/add\" ?\r\n            <div>\r\n                <h3>Add an Expense</h3>\r\n                <ExpenseAddForm onSubmit={this.onSubmit} />\r\n            </div> \r\n            :\r\n            <div>\r\n                <h3>Request an Expense</h3>\r\n                <ExpenseRequestForm onSubmit={this.onSubmit} />\r\n            </div>            \r\n        );\r\n    };\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn,\r\n        usrProfile: state.auth.usrProfile\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { createExpense })(ExpenseCreate);","import React from 'react';\r\nimport history from '../../history'\r\nimport swal from 'sweetalert'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { fetchExpenses, deleteExpense } from '../../actions'\r\n\r\nclass ExpenseList extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        //Makes sure to only fetch expenses when the user is signed in and the expenses list hasn't been loaded yet\r\n        if (this.props.isSignedIn === true) {\r\n            if (this.props.expenses.length === 0)\r\n                this.props.fetchExpenses(this.props.usrProfile.email);\r\n        }\r\n        else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n    handleExpenseDelete = (expenseId) => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"This will permanenlty delete the record\",\r\n            icon: \"warning\",\r\n            buttons: [\"cancel\", \"Yes\"],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    this.props.deleteExpense(expenseId, this.props.usrProfile.email);                    \r\n                }\r\n            });\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.expenses.map(expense => {\r\n            var monthname = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n            const d = new Date(expense.date)\r\n            const date = monthname[d.getMonth()] + \"/\" + d.getDate() + \"/\" + d.getFullYear();\r\n            return (\r\n                <tr key={expense._id}>\r\n                    <td>{expense.description}</td>\r\n                    <td><h4>${expense.amount}</h4></td>\r\n                    <td>{date}</td>\r\n                    <td>\r\n                        <div className=\"row\">\r\n                            <div className='col-sm-8'>\r\n                                {expense.requestee}\r\n                            </div>\r\n                            <div className='col-sm-4'>\r\n                                <button onClick={() => { this.handleExpenseDelete(expense._id) }}\r\n                                    className=\"mini ui inverted red button\" style={{ float: 'right' }}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    renderCreateBtn() {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: 'right', marginBottom: '15px' }}>\r\n                    <div className=\"ui buttons\">\r\n                        <Link to=\"/expenses/add\" className=\"ui  button primary\">\r\n                            Add Expense\r\n                        </Link>\r\n                        <div className=\"or\"></div>\r\n                        <Link to=\"/expenses/request\" className=\"ui positive button\">\r\n                            Request Expense\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <h2>Expenses History</h2>\r\n            <table className=\"ui celled padded table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Amount</th>\r\n                        <th>Date</th>\r\n                        <th>Requestee</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderList()}\r\n                </tbody>\r\n            </table>\r\n            <div>{this.renderCreateBtn()}</div>\r\n        </div>\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {//here we extract what we need from the redux store object (state) to set as props to this component\r\n        expenses: Object.values(state.expenses),//Object values turns all the values inside the given object into an array\r\n        usrProfile: state.auth.usrProfile,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n//using connect here will pass the state object from the redux store as an argument to the mapStateToProps\r\nexport default connect(mapStateToProps, { fetchExpenses, deleteExpense })(ExpenseList);","import React from 'react'\r\nimport history from '../../history'\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../../actions\";\r\n\r\nconst config = require('../../config'); \r\n\r\nclass GoogleAuth extends React.Component {\r\n\r\n    componentDidMount() {//we only want to load the google auth library when this component is rendered\r\n        //when we try to load the client library from gapi this operation will take some time to download additional JS code from google's servers\r\n        //so we need to get a callback for when that operation is complete. We can do this by adding a callback as a second argument\r\n        //load only allows us to get a notification\" about the call being done with a callback function, however\r\n        //init() returns a promise so we don't need to use a callback function we can use the method .then() from the promise object\r\n        window.gapi.load('client:auth2', () => {\r\n            //add loading gif\r\n            window.gapi.client.init({\r\n                clientId: config.GOOGLE_CLIENTID,\r\n                scope: 'profile'\r\n            }).then(() => {\r\n                //here the gapi process is done and we can save a reference to the Auth object in the component class using this\r\n                this.authInstance = window.gapi.auth2.getAuthInstance();\r\n                //this.setState({ isSignedIn: this.authInstance.isSignedIn.get() });//we can look at gapi documentation so look at more methods\r\n                this.onAuthChange(this.authInstance.isSignedIn.get());//we can look at gapi documentation to look at more methods\r\n                this.authInstance.isSignedIn.listen(this.onAuthChange);//callback function reference                \r\n            });\r\n        });\r\n    }\r\n    //since this is a callback function we need to declare it as an arrow function so that it's context is bound to the component\r\n    onAuthChange = (isSignedIn) => { // isSignedIn comes from props    \r\n        if(isSignedIn){\r\n            this.props.signIn(this.authInstance);\r\n            history.push(\"/\")\r\n        } else{\r\n            this.props.signOut();\r\n            this.authInstance.signOut();\r\n            history.push(\"/login\")\r\n        }\r\n    }\r\n\r\n    onSignInClick = () =>{//remember this.auth is a reference to the AuthInstance from gapi declared inside the then() method\r\n        this.authInstance.signIn();\r\n    }\r\n\r\n    onSignOutClick = () => {//remember this.auth is a reference to the AuthInstance from gapi declared inside the then() method\r\n        this.authInstance.signOut();\r\n    }\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if (!this.props.isSignedIn) {\r\n            return ( \r\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\" />\r\n                    Sign In with Google\r\n                </button>\r\n            );\r\n        } \r\n        else {\r\n            return (//remeber!! when passing callback functions you want to pass a reference to it and not the call\r\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n                    <i className=\"google icon\" />\r\n                    Sign Out\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.renderAuthButton()}</div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { isSignedIn: state.auth.isSignedIn }; // passed as props\r\n};\r\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth)","import React from 'react'\r\nimport GoogleAuth from './GoogleAuth'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    renderError({ error, touched }) {//distructured parameters from meta\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"ui error message\">\r\n                        <div className=\"header\">{error}</div>\r\n                    </div>\r\n                </div>\r\n                \r\n            );\r\n        }\r\n    }\r\n\r\n    //everytime the Field tag calls the renderInput function it's going to pass a number of arguments as props\r\n    renderInput = (formProps) => {\r\n        const className = `ui labeled input ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`\r\n        const { placeholder, type, icon } = formProps;\r\n        const iconClass = `${icon} icon`\r\n        return (\r\n            <div className={className} >\r\n                <div className=\"ui label\">\r\n                    <i className={iconClass}></i>\r\n                </div>\r\n                <input type={type} placeholder={placeholder}  {...formProps.input} />\r\n                {/* meta property from redux forms has the error messages for each field */}\r\n                {this.renderError(formProps.meta)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onLoginSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <h2 className=\"ui teal image header\">\r\n                    {/* <img src=\"assets/images/logo.png\" className=\"image\"> */}\r\n                    <div className=\"content\">\r\n                        Log-in to your account\r\n                    </div>\r\n                </h2>\r\n                <form onSubmit={this.props.handleSubmit(this.onLoginSubmit)} className=\"ui form error\">\r\n                    <div className=\"ui stacked segment\">\r\n                        <div className=\"field\">\r\n                            <Field name=\"email\" type=\"email\" icon=\"user\" component={this.renderInput} placeholder=\"E-mail address\" />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <Field name=\"password\" type=\"password\" icon=\"lock\" component={this.renderInput} placeholder=\"Password\" />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"ui fluid large teal submit button\">Login</button> \r\n                </form>\r\n                <div className=\"ui message\">\r\n                    Don't have an account? <Link to=\"/signup\"> Sign Up</Link>\r\n                </div>\r\n                <div className=\"ui horizontal divider\">\r\n                    Or\r\n                </div>\r\n                <div className=\"row justify-content-center\"><GoogleAuth/></div>                \r\n            </div>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n    //redux form looks at the name property if an errors property as the same name as the field then Redux form is going to take that error message and pass it into the renderInput function\r\n    //basically the callback function that that specific field is calling and passing the fromProps\r\n    if (!formValues.email) {\r\n        errors.email = \"*\";\r\n    }\r\n    if (!formValues.password) {\r\n        errors.password = \"*\";\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({ //reduxForm is very similar to connect except it takes only one argument {}\r\n    form: 'login form',\r\n    validate: validate\r\n})(LoginForm);","import React from 'react'\r\nimport history from '../../history'\r\nimport { connect } from \"react-redux\";\r\nimport LoginForm from \"./LoginForm\"\r\nimport { signIn, authUser } from \"../../actions\";\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.isSignedIn === true) {\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    onSubmit = (formValues) =>{\r\n        this.props.authUser(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\" style={{marginTop:'20px'}}>\r\n                <div className=\"col-md-8 col-sm-10 col-xs-12\">\r\n                    <LoginForm onSubmit={this.onSubmit} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usrProfile: state.auth.usrProfile,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { signIn, authUser })(Login)\r\n","\r\nimport React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport pagame from '../../apis/pagame'\r\nimport swal from 'sweetalert'\r\n\r\n\r\nclass SignupForm extends React.Component {\r\n\r\n    renderError({ error, touched }) {//distructured parameters from meta\r\n        if (touched && error) {\r\n            return (\r\n                <div className = \"row\">\r\n                    <div className=\"ui error message\">\r\n                        <div className=\"header\">{error}</div>\r\n                    </div>\r\n                </div>\r\n                \r\n            );\r\n        }\r\n    }\r\n\r\n    //everytime the Field tag calls the renderInput function it's going to pass a number of arguments as props\r\n    renderInput = (formProps) => {\r\n        const className = `ui labeled input ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`\r\n        const { placeholder, type, icon } = formProps;\r\n        const iconClass = `${icon} icon`\r\n        return (\r\n            <div className={className} >\r\n                <div className=\"ui label\">\r\n                    <i className={iconClass}></i>\r\n                </div>\r\n                <input type={type} placeholder={placeholder}  {...formProps.input} />\r\n                {/* meta property from redux forms has the error messages for each field */}\r\n                {this.renderError(formProps.meta)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onSubmit = async (formValues) => {\r\n        try {\r\n            const response = await pagame.get(`/users/${formValues.email}`);\r\n            if (response.data.email) {\r\n                swal(\"Account already exists\", \"The email entered is already associated with an account\", \"warning\");\r\n            }\r\n            else {\r\n                //Need to check status to make sure there was no error before submit\r\n                this.props.onSubmit(formValues);\r\n            }\r\n        } catch (error) {\r\n            swal(\"Sorry\", \"There was a problem when trying to create your account\", \"warning\");\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <h2 className=\"ui teal image header\">\r\n                    {/* <img src=\"assets/images/logo.png\" className=\"image\"> */}\r\n                    <div className=\"content\">\r\n                        Create an account\r\n                    </div>\r\n                </h2>\r\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui large form error\">\r\n                    <div className=\"ui stacked segment\">\r\n                        <div className=\"field\">\r\n                            <Field name=\"fullName\" type=\"text\" icon=\"user\" component={this.renderInput} placeholder=\"Full Name\" />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <Field name=\"email\" type=\"email\" icon=\"mail\" component={this.renderInput} placeholder=\"E-mail address\" />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <Field name=\"password\" type=\"password\" icon=\"lock\" component={this.renderInput} placeholder=\"Password\" />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <Field name=\"re_password\" type=\"password\" icon=\"lock\" component={this.renderInput} placeholder=\"Confirm your password\" />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"ui fluid large teal submit button\">Sign up</button>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n    //redux form looks at the name property if an errors property as the same name as the field then Redux form is going to take that error message and pass it into the renderInput function\r\n    //basically the callback function that that specific field is calling and passing the fromProps\r\n    if (!formValues.fullName) {\r\n        errors.fullName = \"*\";\r\n    }\r\n    if (!formValues.email) {\r\n        errors.email = \"*\";\r\n    }\r\n    if (!formValues.password) {\r\n        errors.password = \"*\";\r\n    }\r\n    if (!formValues.re_password) {\r\n        errors.re_password = \"*\";\r\n    }\r\n    if (!(formValues.password === formValues.re_password)) {\r\n        errors.re_password = \"Password confirmation does not match\";\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default reduxForm({ //reduxForm is very similar to connect except it takes only one argument {}\r\n    form: 'login form',\r\n    validate: validate\r\n})(SignupForm);\r\n\r\n","import React from 'react'\r\nimport history from '../../history'\r\nimport pagame from '../../apis/pagame'\r\nimport swal from 'sweetalert'\r\nimport { connect } from \"react-redux\";\r\nimport SignupForm from \"./SignupForm\"\r\nimport { authUser } from \"../../actions\";\r\n\r\n\r\n\r\nclass Signup extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.isSignedIn === true) {\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    onSubmit = async (formValues) =>{\r\n        //remove re_password since it's only needed for validatioin\r\n        if(formValues.re_password){\r\n            delete formValues.re_password\r\n        }\r\n        //api call to create User\r\n        try{\r\n            const response = await pagame.post('/users/create', { ...formValues });\r\n            if(response.data === 'error'){\r\n                swal(\"Sorry\", \"Unable to create account\", \"error\");\r\n            }\r\n            else{\r\n                swal(\"Welcome to PagaMe\", \"Your account has been created successfully\", \"success\");\r\n                this.props.authUser(response.data);\r\n            }            \r\n        }catch(error){\r\n            //Log the error\r\n            swal(\"Sorry\", \"Unable to create account\", \"error\");\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\" style={{ marginTop: '20px' }}>\r\n                <div className=\"col-md-8 col-sm-10 col-xs-12\">\r\n                    <SignupForm onSubmit={this.onSubmit} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usrProfile: state.auth.usrProfile,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { authUser })(Signup)\r\n","\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../actions\";\r\n\r\nclass Header extends React.Component {\r\n\r\n    onSignOutClick = () => {//remember this.auth is a reference to the AuthInstance from gapi declared inside the then() method\r\n        this.props.signOut();\r\n        \r\n        if (this.props.authInstance)\r\n        this.props.authInstance.signOut();\r\n    }\r\n\r\n    renderCollapseMenu() {\r\n        return (this.props.isSignedIn ?\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button> : null\r\n        );\r\n    }\r\n    renderLoggedNav() {\r\n        return (this.props.isSignedIn ?\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                        <h5 className=\"nav-link\">\r\n                            <Link to=\"/\" >\r\n                                Home\r\n                            </Link>\r\n                        </h5>\r\n                    </li>\r\n                    <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                        <h5 className=\"nav-link\">\r\n                            <Link to=\"/expenses/add\" >\r\n                                Add Expense\r\n                            </Link>\r\n                        </h5>\r\n                    </li>\r\n                    <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\r\n                        <h5 className=\"nav-link\">\r\n                            <Link to=\"/expenses/request\" >\r\n                                Request Expense\r\n                            </Link>\r\n                        </h5>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"ui divider\"></div>\r\n                <button onClick={this.onSignOutClick} className=\"ui teal google button\">\r\n                    Sign out\r\n                </button>\r\n            </div> : null\r\n        );\r\n    }\r\n\r\n    renderHeader() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg border-bottom bg-white fixed-top shadow-sm justify-content-between navbar-light\">\r\n                    <Link to=\"/\" >\r\n                        <h3 className=\"navbar-brand\">PagaMe</h3>\r\n                    </Link>                    \r\n                    {this.renderCollapseMenu()}  \r\n                    {this.renderLoggedNav()}\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: '70px' }}>{this.renderHeader()}</div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    //need to pass signed status into state from regular login\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn,\r\n        authInstance: state.auth.instance\r\n    }; // passed as props\r\n};\r\nexport default connect(mapStateToProps, { signOut })(Header)\r\n\r\n","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom'\r\nimport ExpenseCreate from \"./expenses/ExpenseCreate\";\r\nimport ExpenseList from \"./expenses/ExpenseList\";\r\nimport Login from \"./login/Login\"\r\nimport Signup from \"./login/Signup\"\r\nimport Header from \"./Header\"\r\nimport history from \"../history\" //to use it we need to use Router instead of the BrowserRouter component\r\n\r\n\r\nconst App = () => {    \r\n    return (        \r\n        <div className=\"container\">            \r\n            <Router history={history}>\r\n                <div className = \"row\">\r\n                    <Header />\r\n                </div>\r\n                <div className=\"container\">\r\n                    {/* exact prop by itself means exact = {ture} */}                    \r\n                    <Route path=\"/login\" exact component={Login} />\r\n                    <Route path=\"/signup\" exact component={Signup} />\r\n                    <Route path=\"/\" exact component={ExpenseList} />\r\n                    <Route path=\"/expenses/add\" exact component={ExpenseCreate} />\r\n                    <Route path=\"/expenses/request\" exact component={ExpenseCreate} />\r\n                </div>            \r\n           \r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (App);","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    usrProfile:null,\r\n    instance:null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) =>{    \r\n    switch(action.type){        \r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, usrProfile: action.payload, instance: action.instance};\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, usrProfile: null, instance: null};\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport {reducer as formReducer} from 'redux-form'; //giving it an alias\r\nimport authReducer from './authReducer';\r\nimport expenseReducer from './expenseReducers'\r\n\r\nexport default combineReducers ({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    expenses: expenseReducer\r\n});","import _ from 'lodash';\r\nimport { CREATE_EXPENSE, FETCH_EXPENSES, FETCH_EXPENSE, DELETE_EXPENSE} from '../actions/types';\r\n\r\nexport default (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case CREATE_EXPENSE:\r\n            return { ...state, [action.payload._id]: action.payload }; \r\n        case FETCH_EXPENSES:\r\n            return {...state, ..._.mapKeys(action.payload, '_id')};\r\n        case FETCH_EXPENSE:\r\n            return {...state, [action.payload._id]: action.payload};\r\n        case DELETE_EXPENSE:\r\n            console.log(state)\r\n            return _.omit(state, action.payload);        \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n//this is to wire up the redux devtools extension\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n        reducers,\r\n        composeEnhancers(applyMiddleware(reduxThunk))\r\n    );\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <App/>\r\n    </Provider>\r\n    ,document.querySelector('#root')\r\n);"],"sourceRoot":""}